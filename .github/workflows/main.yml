name: Build with KernelSU

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Install dependencies
      run: |
        sudo apt-get update -y 
        sudo apt-get install binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
        wget https://storage.xzr.moe/horizon-clang/Horizon-Clang-16.0.6.tar.xz
        mkdir clang
        tar -xJvf Horizon-Clang-16.0.6.tar.xz -C clang

    - name: Start Build
      id: start-build
      run: |
        CLANG_PATH=$(pwd)/clang
        echo CONFIG_KPROBES=y >> arch/arm64/configs/kebab_defconfig
        echo CONFIG_HAVE_KPROBES=y >> arch/arm64/configs/kebab_defconfig
        echo CONFIG_KPROBE_EVENTS=y >> arch/arm64/configs/kebab_defconfig
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
        sed -i '/int ksys_umount(char __user \*name, int flags)/i \
#ifdef CONFIG_KSU\
static int can_umount(const struct path *path, int flags)\
{\
    struct mount *mnt = real_mount(path->mnt);\
\
    if (flags & ~(MNT_FORCE | MNT_DETACH | MNT_EXPIRE | UMOUNT_NOFOLLOW))\
        return -EINVAL;\
    if (!may_mount())\
        return -EPERM;\
    if (path->dentry != path->mnt->mnt_root)\
        return -EINVAL;\
    if (!check_mnt(mnt))\
        return -EINVAL;\
    if (mnt->mnt.mnt_flags & MNT_LOCKED) /* Check optimistically */\
        return -EINVAL;\
    if (flags & MNT_FORCE && !capable(CAP_SYS_ADMIN))\
        return -EPERM;\
    return 0;\
}\
\
int path_umount(struct path *path, int flags)\
{\
    struct mount *mnt = real_mount(path->mnt);\
    int ret;\
\
    ret = can_umount(path, flags);\
    if (!ret)\
        ret = do_umount(mnt, flags);\
\
    /* we must not call path_put() as that would clear mnt_expiry_mark */\
    dput(path->dentry);\
    mntput_no_expire(mnt);\
    return ret;\
}\
#endif\
' fs/namespace.c
        make -j$(nproc --all) kebab_defconfig O=out ARCH=arm64 all CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=${CLANG_PATH}/bin/aarch64-linux-gnu- CC=${CLANG_PATH}/bin/clang CROSS_COMPILE_COMPAT=${CLANG_PATH}/bin/arm-linux-gnueabi- AR=${CLANG_PATH}/bin/llvm-ar NM=${CLANG_PATH}/bin/llvm-nm LLVM_AR=${CLANG_PATH}/bin/llvm-ar LLVM_NM=${CLANG_PATH}/bin/llvm-nm OBJCOPY=${CLANG_PATH}/bin/llvm-objcopy OBJDUMP=${CLANG_PATH}/bin/llvm-objdump STRIP=${CLANG_PATH}/bin/llvm-strip LD=${CLANG_PATH}/bin/ld.lld

    - name: Compress out
      id: compress-out
      run: |
        tar -czvf out.tar.gz out/

    - name: Upload Output
      uses: actions/upload-artifact@v3
      with:
        name: OnePlus8T-Horizon-KSU
        path: out.tar.gz
